// API „Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÉÜ„Çπ„Éà„Çπ„ÇØ„É™„Éó„Éà

const baseURL = 'http://localhost:3000';

async function testEndpoints() {
  console.log('üîç API „Ç®„É≥„Éâ„Éù„Ç§„É≥„Éà„ÉÜ„Çπ„ÉàÈñãÂßã\n');

  // 1. Health Check
  console.log('1Ô∏è‚É£  Health Check');
  try {
    const health = await fetch(`${baseURL}/api/health`);
    const healthData = await health.json();
    console.log('‚úÖ Health:', healthData.status);
  } catch (error) {
    console.log('‚ùå Health check failed:', error.message);
  }

  // 2. Config endpoint
  console.log('\n2Ô∏è‚É£  Config Endpoint');
  try {
    const config = await fetch(`${baseURL}/api/config`);
    const configData = await config.json();
    console.log('‚úÖ Config available:', configData.anon_key ? 'Yes' : 'No');
  } catch (error) {
    console.log('‚ùå Config fetch failed:', error.message);
  }

  // 3. V1 Config (API Key required)
  console.log('\n3Ô∏è‚É£  V1 API Config');
  try {
    const v1Config = await fetch(`${baseURL}/api/v1/config`, {
      headers: {
        'X-API-Key': 'test-key'
      }
    });
    if (v1Config.status === 401) {
      console.log('‚ö†Ô∏è  V1 Config: Authentication required (expected)');
    } else {
      const v1Data = await v1Config.json();
      console.log('‚úÖ V1 Config:', v1Data);
    }
  } catch (error) {
    console.log('‚ùå V1 Config failed:', error.message);
  }

  // 4. Companies endpoint
  console.log('\n4Ô∏è‚É£  Companies Endpoint');
  try {
    const companies = await fetch(`${baseURL}/api/v1/companies?fiscal_year=FY2024`, {
      headers: {
        'X-API-Key': process.env.XBRL_API_KEY || 'test-key'
      }
    });

    if (companies.status === 401) {
      console.log('‚ö†Ô∏è  Companies: Authentication required');
    } else if (companies.status === 200) {
      const companiesData = await companies.json();
      console.log(`‚úÖ Companies found: ${companiesData.companies?.length || 0}`);
    }
  } catch (error) {
    console.log('‚ùå Companies fetch failed:', error.message);
  }

  // 5. Documents endpoint
  console.log('\n5Ô∏è‚É£  Documents Endpoint');
  try {
    const docs = await fetch(`${baseURL}/api/v1/documents?company_id=S100CLML&fiscal_year=FY2024`, {
      headers: {
        'X-API-Key': process.env.XBRL_API_KEY || 'test-key'
      }
    });

    if (docs.status === 401) {
      console.log('‚ö†Ô∏è  Documents: Authentication required');
    } else if (docs.status === 200) {
      const docsData = await docs.json();
      console.log(`‚úÖ Documents found: ${docsData.documents?.length || 0}`);
    }
  } catch (error) {
    console.log('‚ùå Documents fetch failed:', error.message);
  }

  console.log('\n‚ú® „ÉÜ„Çπ„ÉàÂÆå‰∫Ü');
}

// ÂÆüË°å
testEndpoints().catch(console.error);