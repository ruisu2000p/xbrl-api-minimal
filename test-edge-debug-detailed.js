/**
 * Ë©≥Á¥∞„Éá„Éê„ÉÉ„Ç∞Áî®Edge Function„ÉÜ„Çπ„Éà
 */

const fetch = (...args) => import('node-fetch').then(({default: fetch}) => fetch(...args));

const API_KEY = 'xbrl_v1_ead23e30246d88250fdf4423c1e1491d';
const GATEWAY_URL = 'https://wpwqxhyiglbtlaimrjrx.supabase.co/functions/v1/xbrl-api-gateway-jwt';

async function testEdgeFunctionDetailed() {
    console.log('üîç Ë©≥Á¥∞„Éá„Éê„ÉÉ„Ç∞Áî®Edge Function„ÉÜ„Çπ„Éà\n');

    try {
        console.log('API„Ç≠„Éº:', API_KEY);
        console.log('URL:', GATEWAY_URL);
        console.log('');

        const response = await fetch(GATEWAY_URL, {
            headers: {
                'Authorization': `Bearer ${API_KEY}`,
                'Content-Type': 'application/json'
            }
        });

        console.log('„Çπ„ÉÜ„Éº„Çø„Çπ:', response.status);
        console.log('„Éò„ÉÉ„ÉÄ„Éº:');
        for (const [key, value] of response.headers.entries()) {
            console.log(`  ${key}: ${value}`);
        }

        const responseText = await response.text();
        console.log('\n„É¨„Çπ„Éù„É≥„Çπ„ÉÜ„Ç≠„Çπ„Éà:', responseText);

        try {
            const jsonResponse = JSON.parse(responseText);
            console.log('\nJSON„É¨„Çπ„Éù„É≥„Çπ:');
            console.log(JSON.stringify(jsonResponse, null, 2));

            if (jsonResponse.debugDetails) {
                console.log('\nüîß „Éá„Éê„ÉÉ„Ç∞Ë©≥Á¥∞:');
                console.log(JSON.stringify(jsonResponse.debugDetails, null, 2));
            }
        } catch (e) {
            console.log('JSON„Éë„Éº„Çπ„Ç®„É©„Éº:', e.message);
        }

    } catch (error) {
        console.error('‚ùå „Ç®„É©„Éº:', error.message);
    }
}

testEdgeFunctionDetailed();